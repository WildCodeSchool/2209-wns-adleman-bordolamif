{
  "name": "wait-for-it-main",
  "version": "1.0.0",
  "description": "Main package.json app",
  "scripts": {
    "start:mobile": "npm --prefix ./client_mobile start",
    "setup": "node echo \"[Initializing project]\" -s 1 -b 100 -f 44 && npm i && husky install && npm --prefix ./client_web i && npm --prefix ./client_mobile i && npm --prefix ./server i && npm --prefix ./test i && node echo \"All the dependencies have been installed\" -f 92",
    "lint": "eslint --ext .js --ext .jsx --ext .ts --ext .tsx .",
    "fix": "eslint --fix --ext .js --ext .jsx --ext .ts --ext .tsx .",
    "prepare": "husky install",
    "save:docker-db": "node echo \"[Initializing database save]\" -s 1 -b 100 -f 44 && dotenv -- cross-var docker run --rm -v waitit-development_db:/var/lib/postgresql/data -v %DB_SAVE_LOCATION%:/backup postgres:15-alpine tar czvf /backup/waitit-development_db.tar.gz /var/lib/postgresql/data && node echo \"Your local database has been save on your Desktop\" -f 92",
    "import:docker-db": "node echo \"[Initializing database import]\" -s 1 -b 100 -f 44 && docker-compose -f docker-compose.yml down && dotenv -- cross-var docker run --rm -v waitit-development_db:/var/lib/postgresql/data -v %DB_SAVE_LOCATION%:/backup postgres:15-alpine tar xzvf /backup/waitit-development_db.tar.gz && docker-compose -f docker-compose.yml up --build && node echo \"Your local database has been imported\" -f 92",
    "test:docker": "docker-compose -f docker-compose.integration.yml up --build --exit-code-from testrunner",
    "start:prod": "docker compose -f docker-compose.production.yml down && docker compose -f docker-compose.production.yml pull && docker compose -f docker-compose.production.yml --env-file .env.production up",
    "publish:server": "cd server && docker build -f Dockerfile.production . -t joffreychevalier/waitit-server && docker push joffreychevalier/waitit-server && cd ..",
    "publish:client": "cd client_web && dotenv -- cross-var docker build --build-arg VITE_WEBSOCKET_URL=%VITE_WEBSOCKET_URL_PRODUCTION% docker build -f Dockerfile.production . -t joffreychevalier/waitit-client && docker push joffreychevalier/waitit-client && cd ..",
    "publish:all": "npm run publish:server && npm run publish:client",
    "start:staging": "docker compose -f docker-compose.staging.yml down && docker compose -f docker-compose.staging.yml pull && docker compose -f docker-compose.staging.yml --env-file .env.staging up",
    "publish-staging:server": "cd server && docker build -f Dockerfile.production . -t joffreychevalier/waitit-server:staging && docker push joffreychevalier/waitit-server:staging && cd ..",
    "publish-staging:client": "cd client_web && dotenv -- cross-var docker build --build-arg VITE_WEBSOCKET_URL=%VITE_WEBSOCKET_URL_STAGING% -f Dockerfile.staging . -t joffreychevalier/waitit-client:staging && docker push joffreychevalier/waitit-client:staging && cd ..",
    "publish-staging:all": "npm run publish-staging:server && npm run publish-staging:client"
  },
  "author": "Joffrey Chevalier",
  "license": "ISC",
  "rules": {
    "no-console": [
      "error",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ]
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^5.47.0",
    "@typescript-eslint/parser": "^5.47.0",
    "cross-var": "^1.1.0",
    "dotenv-cli": "^7.2.1",
    "eslint": "^8.30.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-import-resolver-custom-alias": "^1.3.0",
    "eslint-import-resolver-typescript": "^3.5.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-react": "^7.31.11",
    "eslint-plugin-react-native": "^4.0.0",
    "husky": "^8.0.2"
  }
}

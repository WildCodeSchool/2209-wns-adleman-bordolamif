name: WaitIt-production
services:
  db_prod:
    image: postgres:15-alpine
    container_name: WaitIt-db-prod
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_prod:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432

  server:
    container_name: WaitIt-server-prod
    depends_on:
      db_prod:
        condition: service_healthy
    image: joffreychevalier/waitit-server
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
      DB_PORT: ${DB_PORT}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      DB_HOST: 'db_prod'
      NODE_ENV: 'production'
    healthcheck:
      test: 'curl --fail --request GET -H ''content-type:application/json'' --url ''http://localhost:4000/graphql?query=%7B__typename%7D'''
      interval: 5s
      timeout: 5s
      retries: 10

  client:
    container_name: WaitIt-client-prod
    image: joffreychevalier/waitit-client

  nginx:
    container_name: WaitIt-nginx-prod
    image: nginx:1.21.3
    depends_on:
      client:
        condition: service_started
      server:
        condition: service_healthy
    restart: always
    ports:
      - ${GATEWAY_PORT:-8000}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx

volumes:
  db_prod:
